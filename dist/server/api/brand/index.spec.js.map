{
  "version": 3,
  "sources": [
    "../../../../server/api/brand/index.spec.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "index.spec.js",
  "sourcesContent": [
    "'use strict';\n\nvar proxyquire = require('proxyquire').noPreserveCache();\n\nvar brandCtrlStub = {\n  index: 'brandCtrl.index',\n  show: 'brandCtrl.show',\n  create: 'brandCtrl.create',\n  update: 'brandCtrl.update',\n  destroy: 'brandCtrl.destroy'\n};\n\nvar routerStub = {\n  get: sinon.spy(),\n  put: sinon.spy(),\n  patch: sinon.spy(),\n  post: sinon.spy(),\n  delete: sinon.spy()\n};\n\n// require the index with our stubbed out modules\nvar brandIndex = proxyquire('./index.js', {\n  'express': {\n    Router: function () {\n      return routerStub;\n    }\n  },\n  './brand.controller': brandCtrlStub\n});\n\ndescribe('Brand API Router:', function () {\n\n  it('should return an express router instance', function () {\n    expect(brandIndex).to.equal(routerStub);\n  });\n\n  describe('GET /api/brands', function () {\n\n    it('should route to brand.controller.index', function () {\n      expect(routerStub.get\n      .withArgs('/', 'brandCtrl.index')\n      ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('GET /api/brands/:id', function () {\n\n    it('should route to brand.controller.show', function () {\n      expect(routerStub.get\n      .withArgs('/:id', 'brandCtrl.show')\n      ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('POST /api/brands', function () {\n\n    it('should route to brand.controller.create', function () {\n      expect(routerStub.post\n      .withArgs('/', 'brandCtrl.create')\n      ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PUT /api/brands/:id', function () {\n\n    it('should route to brand.controller.update', function () {\n      expect(routerStub.put\n      .withArgs('/:id', 'brandCtrl.update')\n      ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('PATCH /api/brands/:id', function () {\n\n    it('should route to brand.controller.update', function () {\n      expect(routerStub.patch\n      .withArgs('/:id', 'brandCtrl.update')\n      ).to.have.been.calledOnce;\n    });\n\n  });\n\n  describe('DELETE /api/brands/:id', function () {\n\n    it('should route to brand.controller.destroy', function () {\n      expect(routerStub.delete\n      .withArgs('/:id', 'brandCtrl.destroy')\n      ).to.have.been.calledOnce;\n    });\n\n  });\n\n});\n"
  ]
}
