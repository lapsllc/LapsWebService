{
  "version": 3,
  "sources": [
    "../../../../server/api/user/user.controller.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "user.controller.js",
  "sourcesContent": [
    "'use strict';\n\nimport User from './user.model';\nimport passport from 'passport';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function (err) {\n    res.status(statusCode).json(err);\n  }\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  User.findAsync({}, '-salt -password')\n  .then(users => {\n    res.status(200).json(users);\n  })\n  .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res, next) {\n  var newUser = new User(req.body);\n  newUser.provider = 'local';\n  newUser.role = 'user';\n  newUser.saveAsync()\n  .spread(function (user) {\n    var token = jwt.sign({_id: user._id}, config.secrets.session, {\n      expiresIn: 60 * 60 * 5\n    });\n    res.json({token});\n  })\n  .catch(validationError(res));\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n\n  User.findByIdAsync(userId)\n  .then(user => {\n    if (!user) {\n      return res.status(404).end();\n    }\n    res.json(user.profile);\n  })\n  .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  User.findByIdAndRemoveAsync(req.params.id)\n  .then(function () {\n    res.status(204).end();\n  })\n  .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res, next) {\n  var userId = req.user._id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  User.findByIdAsync(userId)\n  .then(user => {\n    if (user.authenticate(oldPass)) {\n      user.password = newPass;\n      return user.saveAsync()\n      .then(() => {\n        res.status(204).end();\n      })\n      .catch(validationError(res));\n    } else {\n      return res.status(403).end();\n    }\n  });\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user._id;\n\n  User.findOneAsync({_id: userId}, '-salt -password')\n  .then(user => { // don't ever give out the password or salt\n    if (!user) {\n      return res.status(401).end();\n    }\n    res.json(user);\n  })\n  .catch(err => next(err));\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res, next) {\n  res.redirect('/');\n}\n"
  ]
}
